{"version":3,"sources":["App.tsx","webpack:////Users/nikki/Development/gggg/App.css?a767","App.css"],"names":["pal","palx","theme","createMuiTheme","typography","fontFamily","fontSize","button","textTransform","palette","primary","main","indigo","dark","secondary","gray","contrastThreshold","tonalOffset","uiBackgroundColor","document","body","style","background","removeProperty","store","scale","Canvas","React","memo","notifyStore","canvasRef","useRef","canvasReadyRef","useLayoutEffect","listener","current","canvas","rect","getBoundingClientRect","width","devicePixelRatio","height","window","addEventListener","mql","matchMedia","addListener","removeEventListener","removeListener","setCanvasRef","useCallback","ctx","getContext","setup","W","H","rects","colorNames","Object","keys","i","x","Math","random","y","fillStyle","floor","length","speed","w","h","phase","PI","lastUpdateTime","performance","now","lastFPSUpdateTime","nFramesSinceLastFPSUpdate","fps","requestAnimationFrame","frame","t","dt","sin","update","clearRect","fillRect","font","textBaseline","fillText","draw","flex","backgroundColor","alignItems","justifyContent","padding","ref","borderRadius","overflow","UI","isLandscape","storeCounter","paddingLeft","undefined","paddingTop","flexDirection","paddingBottom","variant","color","value","min","max","step","onChange","_","marginHorizontal","marginBottom","paddingHorizontal","App","useState","setStoreCounter","innerWidth","innerHeight","setFlexDirection","useEffect","position","content","module","options","transform","locals","exports","push"],"mappings":"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","file":"static/js/app.557d2160.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect, useCallback, useLayoutEffect } from 'react';\nimport { Text, View, TouchableOpacity, SafeAreaView, ScrollView } from 'react-native';\nimport Button from '@material-ui/core/Button';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\nimport palx from 'palx';\nimport ScrollLock, { TouchScrollable } from 'react-scrolllock';\n\nimport './App.css';\n\n//\n// Style\n//\n\nconst pal = palx('#b81');\n\nlet theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Inter',\n    fontSize: 14,\n    button: {\n      textTransform: 'none',\n    },\n  },\n  palette: {\n    primary: {\n      main: pal.indigo[4],\n      dark: pal.indigo[5],\n    },\n    secondary: {\n      main: pal.gray[2],\n      dark: pal.gray[3],\n    },\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n});\n\nconst uiBackgroundColor = pal.gray[0];\ndocument.body.style.background = uiBackgroundColor;\ndocument.body.style.removeProperty('overflow');\ndocument.body.style.removeProperty('position');\ndocument.body.style.removeProperty('top');\ndocument.body.style.removeProperty('width');\nconst canvasBackgroundColor = 'white';\nconst commonPadding = 38;\n\n//\n// Store\n//\n\ninterface Store {\n  scale: number;\n}\n\ntype NotifyStore = () => void;\n\nconst store: Store = {\n  scale: 1,\n};\n\n//\n// Canvas\n//\n\nconst Canvas = React.memo(({ notifyStore }: { notifyStore: NotifyStore }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const canvasReadyRef = useRef<boolean>(false);\n\n  // Listen for canvas resizing\n  useLayoutEffect(() => {\n    const listener = () => {\n      if (canvasRef.current) {\n        const canvas = canvasRef.current;\n        const rect = canvas.getBoundingClientRect();\n        canvas.width = devicePixelRatio * rect.width;\n        canvas.height = devicePixelRatio * rect.height;\n        (canvasReadyRef as React.MutableRefObject<boolean>).current = true;\n      }\n    };\n    listener();\n    window.addEventListener('resize', listener);\n    window.addEventListener('scroll', listener);\n    const mql = window.matchMedia('(orientation: portrait)');\n    mql.addListener(listener);\n    return () => {\n      window.removeEventListener('resize', listener);\n      window.removeEventListener('scroll', listener);\n      mql.removeListener(listener);\n    };\n  }, [canvasRef.current]);\n\n  // Listen for canvas ref\n  const setCanvasRef = useCallback((canvas: HTMLCanvasElement) => {\n    (canvasRef as React.MutableRefObject<HTMLCanvasElement>).current = canvas;\n    if (!canvas) {\n      return;\n    }\n    const ctx = canvas.getContext('2d');\n\n    const setup = () => {\n      // Wait until ready\n      if (!(canvasReadyRef.current && ctx)) {\n        requestAnimationFrame(setup);\n        return;\n      }\n      let W = canvas.width;\n      let H = canvas.height;\n\n      // Init\n      const N = __DEV__ ? 10 : 98;\n      interface Rect {\n        x: number;\n        y: number;\n        fillStyle: string;\n        speed: number;\n        w: number;\n        h: number;\n        phase: number;\n      }\n      const rects: Rect[] = [];\n      {\n        // Rects\n        const colorNames = Object.keys(pal);\n        for (let i = 0; i < N; ++i) {\n          rects[i] = {\n            x: W * Math.random(),\n            y: H * Math.random(),\n            fillStyle:\n              pal[colorNames[Math.floor(Math.random() * colorNames.length)]][\n                Math.floor(1 + Math.random() * 5)\n              ],\n            speed: 0.5 * W * Math.random(),\n            w: (W * Math.random()) / 16,\n            h: (W * Math.random()) / 16,\n            phase: 2 * Math.PI * Math.random(),\n          };\n        }\n      }\n\n      // Update\n      let lastUpdateTime = 0.001 * performance.now();\n      let lastFPSUpdateTime = lastUpdateTime;\n      let nFramesSinceLastFPSUpdate = 0;\n      let fps = 0;\n      const update = () => {\n        // Time\n        const t = 0.001 * performance.now();\n        const dt = t - lastUpdateTime;\n        lastUpdateTime = t;\n        ++nFramesSinceLastFPSUpdate;\n        if (t - lastFPSUpdateTime > 1) {\n          fps = Math.floor(nFramesSinceLastFPSUpdate / (t - lastFPSUpdateTime) + 0.5);\n          lastFPSUpdateTime = t;\n          nFramesSinceLastFPSUpdate = 0;\n        }\n\n        // Rects\n        for (let i = 0; i < N; ++i) {\n          const rect = rects[i];\n          rect.x += rect.speed * Math.sin(t + rect.phase) * dt;\n        }\n      };\n\n      // Draw\n      const draw = () => {\n        // Clear\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = canvasBackgroundColor;\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        // Rects\n        for (let i = 0; i < N; ++i) {\n          const rect = rects[i];\n          ctx.fillStyle = rect.fillStyle;\n          const w = store.scale * rect.w;\n          const h = store.scale * rect.h;\n          ctx.fillRect(rect.x - 0.5 * w, rect.y - 0.5 * h, w, h);\n        }\n\n        // FPS\n        ctx.fillStyle = 'black';\n        ctx.font = '28px Inter';\n        ctx.textBaseline = 'top';\n        ctx.fillText(`fps: ${fps}`, 32, 32);\n      };\n\n      // Frame loop\n      const frame = () => {\n        W = canvas.width;\n        H = canvas.height;\n        update();\n        draw();\n        requestAnimationFrame(frame);\n      };\n      requestAnimationFrame(frame);\n    };\n    setup();\n  }, []);\n\n  // Canvas centered in a box\n  return (\n    <View\n      style={{\n        flex: 1,\n        backgroundColor: uiBackgroundColor,\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: commonPadding,\n      }}>\n      <canvas\n        ref={setCanvasRef}\n        style={{\n          width: '100%',\n          height: '100%',\n          borderRadius: 6,\n          overflow: 'hidden',\n        }}\n      />\n    </View>\n  );\n});\n\n//\n// UI\n//\n\nconst UI = ({\n  isLandscape,\n  storeCounter,\n  notifyStore,\n}: {\n  isLandscape: boolean;\n  storeCounter: number;\n  notifyStore: NotifyStore;\n}) => {\n  return (\n    <View\n      style={{\n        flex: 0.5,\n        backgroundColor: uiBackgroundColor,\n        padding: commonPadding,\n        paddingLeft: isLandscape ? 0 : undefined,\n        paddingTop: isLandscape ? undefined : 0,\n      }}>\n      <View style={{ flexDirection: 'row', paddingBottom: commonPadding }}>\n        <Button variant=\"contained\" color=\"primary\">\n          hai\n        </Button>\n        <View style={{ width: 24 }} />\n        <Button variant=\"contained\" color=\"secondary\">\n          ooh\n        </Button>\n      </View>\n      <View style={{ flexDirection: 'row', paddingBottom: 0.5 * commonPadding }}>\n        <Slider\n          value={store.scale}\n          min={0}\n          max={10}\n          step={0.01}\n          onChange={(_, value) => {\n            store.scale = value as number;\n            notifyStore();\n          }}\n        />\n      </View>\n      <ScrollView\n        style={{\n          marginHorizontal: -commonPadding,\n          marginBottom: !isLandscape ? -commonPadding : 0,\n        }}>\n        <View style={{ paddingHorizontal: commonPadding }}>\n          <Typography style={{ paddingTop: 0.5 * commonPadding }}>\n            buttons don't do anything, slider scales rectangles\n          </Typography>\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\n//\n// App\n//\n\nconst App = () => {\n  // Store change notification\n  const [storeCounter, setStoreCounter] = useState(0);\n  const notifyStore = useCallback(() => {\n    setStoreCounter((storeCounter) => storeCounter + 1);\n  }, []);\n\n  // Track landscape / portrait\n  const [flexDirection, setFlexDirection] = useState<'row' | 'column'>(\n    window.innerWidth > window.innerHeight ? 'row' : 'column'\n  );\n  useEffect(() => {\n    const listener = () => {\n      setFlexDirection(window.innerWidth > window.innerHeight ? 'row' : 'column');\n    };\n    window.addEventListener('resize', listener);\n    window.addEventListener('scroll', listener);\n    const mql = window.matchMedia('(orientation: portrait)');\n    mql.addListener(listener);\n    return () => {\n      window.removeEventListener('resize', listener);\n      window.removeEventListener('scroll', listener);\n      mql.removeListener(listener);\n    };\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <SafeAreaView style={{ flex: 1 }}>\n        <div style={{ width: '100%', height: '100%', position: 'fixed', overflow: 'hidden' }}>\n          <View style={{ width: '100%', height: '100%', flexDirection }}>\n            <Canvas notifyStore={notifyStore} />\n            <UI\n              isLandscape={flexDirection == 'row'}\n              storeCounter={storeCounter}\n              notifyStore={notifyStore}\n            />\n          </View>\n        </div>\n      </SafeAreaView>\n    </ThemeProvider>\n  );\n  return;\n};\n\nexport default App;\n","\nvar content = require(\"!!./node_modules/css-loader/dist/cjs.js!./App.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!./node_modules/css-loader/dist/cjs.js!./App.css\", function() {\n\t\tvar newContent = require(\"!!./node_modules/css-loader/dist/cjs.js!./App.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"./node_modules/css-loader/dist/runtime/api.js\")(false);\n// Imports\nexports.push([module.id, \"@import url(https://rsms.me/inter/inter.css);\", \"\"]);\n\n// Module\nexports.push([module.id, \"html {\\n  font-family: 'Inter', sans-serif;\\n}\\n@supports (font-variation-settings: normal) {\\n  html {\\n    font-family: 'Inter var', sans-serif;\\n  }\\n}\\n\\nhtml,\\nbody {\\n  height: 100%;\\n}\\n\", \"\"]);\n\n"],"sourceRoot":""}
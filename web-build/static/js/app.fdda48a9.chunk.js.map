{"version":3,"sources":["webpack:////Users/nikki/Development/gggg/App.css?5339","App.css","App.tsx","web-build/register-service-worker.js"],"names":["content","module","i","options","transform","undefined","locals","exports","push","pal","palx","theme","createMuiTheme","typography","fontFamily","fontSize","button","textTransform","palette","primary","main","indigo","dark","secondary","gray","contrastThreshold","tonalOffset","uiBackgroundColor","document","body","style","background","store","scale","Canvas","React","memo","notifyStore","canvasRef","useRef","canvasReadyRef","useLayoutEffect","listener","current","canvas","rect","getBoundingClientRect","width","devicePixelRatio","height","window","addEventListener","mql","matchMedia","addListener","removeEventListener","removeListener","setCanvasRef","useCallback","ctx","getContext","setup","W","H","rects","colorNames","Object","keys","x","Math","random","y","fillStyle","floor","length","speed","w","h","phase","PI","lastUpdateTime","performance","now","lastFPSUpdateTime","nFramesSinceLastFPSUpdate","fps","requestAnimationFrame","frame","t","dt","sin","update","clearRect","fillRect","font","textBaseline","fillText","draw","flex","backgroundColor","alignItems","justifyContent","padding","ref","borderRadius","overflow","UI","isLandscape","storeCounter","paddingLeft","paddingTop","flexDirection","paddingBottom","variant","color","value","min","max","step","onChange","_","App","useState","setStoreCounter","innerWidth","innerHeight","setFlexDirection","useEffect","navigator","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"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","file":"static/js/app.fdda48a9.chunk.js","sourcesContent":["\nvar content = require(\"!!../expo/expo-cli/node_modules/css-loader/dist/cjs.js!./App.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../expo/expo-cli/node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../expo/expo-cli/node_modules/css-loader/dist/cjs.js!./App.css\", function() {\n\t\tvar newContent = require(\"!!../expo/expo-cli/node_modules/css-loader/dist/cjs.js!./App.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../expo/expo-cli/node_modules/css-loader/dist/runtime/api.js\")(false);\n// Imports\nexports.push([module.id, \"@import url(https://rsms.me/inter/inter.css);\", \"\"]);\n\n// Module\nexports.push([module.id, \"html { font-family: 'Inter', sans-serif; }\\n@supports (font-variation-settings: normal) {\\n  html { font-family: 'Inter var', sans-serif; }\\n}\\n\", \"\"]);\n\n","import React, { useState, useRef, useEffect, useCallback, useLayoutEffect } from 'react';\nimport { Text, View, TouchableOpacity, SafeAreaView } from 'react-native';\nimport Button from '@material-ui/core/Button';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\nimport palx from 'palx';\nimport ScrollLock, { TouchScrollable } from 'react-scrolllock';\n\nimport './App.css';\n\nconst Fib = () => {\n  const [message, setMessage] = useState('...');\n\n  const onPressRun = () => {\n    const fib = (n: number): number => {\n      if (n <= 1) {\n        return 1;\n      } else {\n        return fib(n - 1) + fib(n - 2);\n      }\n    };\n\n    const startTime = performance.now();\n    const fibResult = fib(40);\n    const fibTime = 0.001 * (performance.now() - startTime);\n    setMessage(`fib: ${fibResult} -- ${fibTime}`);\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        backgroundColor: uiBackgroundColor,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}>\n      <TouchableOpacity onPress={onPressRun}>\n        <Text>run!</Text>\n      </TouchableOpacity>\n      <Text style={{ marginTop: 16 }}>{message}</Text>\n    </View>\n  );\n};\n\nconst pal = palx('#b81');\n\nlet theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Inter',\n    fontSize: 14,\n    button: {\n      textTransform: 'none',\n    },\n  },\n  palette: {\n    primary: {\n      main: pal.indigo[4],\n      dark: pal.indigo[5],\n    },\n    secondary: {\n      main: pal.gray[2],\n      dark: pal.gray[3],\n    },\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n});\n\nconst uiBackgroundColor = pal.gray[0];\ndocument.body.style.background = uiBackgroundColor;\nconst canvasBackgroundColor = 'white';\nconst commonPadding = 38;\n\ninterface Store {\n  scale: number;\n}\n\ntype NotifyStore = () => void;\n\nconst store: Store = {\n  scale: 1,\n};\n\nconst Canvas = React.memo(({ notifyStore }: { notifyStore: NotifyStore }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const canvasReadyRef = useRef<boolean>(false);\n\n  // Listen for canvas resizing\n  useLayoutEffect(() => {\n    const listener = () => {\n      if (canvasRef.current) {\n        const canvas = canvasRef.current;\n        const rect = canvas.getBoundingClientRect();\n        canvas.width = devicePixelRatio * rect.width;\n        canvas.height = devicePixelRatio * rect.height;\n        (canvasReadyRef as React.MutableRefObject<boolean>).current = true;\n      }\n    };\n    listener();\n    window.addEventListener('resize', listener);\n    window.addEventListener('scroll', listener);\n    const mql = window.matchMedia('(orientation: portrait)');\n    mql.addListener(listener);\n    return () => {\n      window.removeEventListener('resize', listener);\n      window.removeEventListener('scroll', listener);\n      mql.removeListener(listener);\n    };\n  }, [canvasRef.current]);\n\n  // Listen for canvas ref\n  const setCanvasRef = useCallback((canvas: HTMLCanvasElement) => {\n    (canvasRef as React.MutableRefObject<HTMLCanvasElement>).current = canvas;\n    if (!canvas) {\n      return;\n    }\n    const ctx = canvas.getContext('2d');\n\n    const setup = () => {\n      // Wait until ready\n      if (!(canvasReadyRef.current && ctx)) {\n        requestAnimationFrame(setup);\n        return;\n      }\n      let W = canvas.width;\n      let H = canvas.height;\n\n      // Init\n      const N = 100;\n      interface Rect {\n        x: number;\n        y: number;\n        fillStyle: string;\n        speed: number;\n        w: number;\n        h: number;\n        phase: number;\n      }\n      const rects: Rect[] = [];\n      {\n        // Rects\n        const colorNames = Object.keys(pal);\n        for (let i = 0; i < N; ++i) {\n          rects[i] = {\n            x: W * Math.random(),\n            y: H * Math.random(),\n            fillStyle:\n              pal[colorNames[Math.floor(Math.random() * colorNames.length)]][\n                Math.floor(1 + Math.random() * 5)\n              ],\n            speed: 0.5 * W * Math.random(),\n            w: (W * Math.random()) / 16,\n            h: (W * Math.random()) / 16,\n            phase: 2 * Math.PI * Math.random(),\n          };\n        }\n      }\n\n      // Update\n      let lastUpdateTime = 0.001 * performance.now();\n      let lastFPSUpdateTime = lastUpdateTime;\n      let nFramesSinceLastFPSUpdate = 0;\n      let fps = 0;\n      const update = () => {\n        // Time\n        const t = 0.001 * performance.now();\n        const dt = t - lastUpdateTime;\n        lastUpdateTime = t;\n        ++nFramesSinceLastFPSUpdate;\n        if (t - lastFPSUpdateTime > 1) {\n          fps = Math.floor(nFramesSinceLastFPSUpdate / (t - lastFPSUpdateTime) + 0.5);\n          lastFPSUpdateTime = t;\n          nFramesSinceLastFPSUpdate = 0;\n        }\n\n        // Rects\n        for (let i = 0; i < N; ++i) {\n          const rect = rects[i];\n          rect.x += rect.speed * Math.sin(t + rect.phase) * dt;\n        }\n      };\n\n      // Draw\n      const draw = () => {\n        // Clear\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = canvasBackgroundColor;\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        // Rects\n        for (let i = 0; i < N; ++i) {\n          const rect = rects[i];\n          ctx.fillStyle = rect.fillStyle;\n          const w = store.scale * rect.w;\n          const h = store.scale * rect.h;\n          ctx.fillRect(rect.x - 0.5 * w, rect.y - 0.5 * h, w, h);\n        }\n\n        // FPS\n        ctx.fillStyle = 'black';\n        ctx.font = '28px Inter';\n        ctx.textBaseline = 'top';\n        ctx.fillText(`fps: ${fps}`, 32, 32);\n      };\n\n      // Frame loop\n      const frame = () => {\n        W = canvas.width;\n        H = canvas.height;\n        update();\n        draw();\n        requestAnimationFrame(frame);\n      };\n      requestAnimationFrame(frame);\n    };\n    setup();\n  }, []);\n\n  // Canvas centered in a box\n  return (\n    <View\n      style={{\n        flex: 1,\n        backgroundColor: uiBackgroundColor,\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: commonPadding,\n      }}>\n      <canvas\n        ref={setCanvasRef}\n        style={{\n          width: '100%',\n          height: '100%',\n          borderRadius: 6,\n          overflow: 'hidden',\n        }}\n      />\n    </View>\n  );\n});\n\nconst UI = ({\n  isLandscape,\n  storeCounter,\n  notifyStore,\n}: {\n  isLandscape: boolean;\n  storeCounter: number;\n  notifyStore: NotifyStore;\n}) => {\n  return (\n    <View\n      style={{\n        flex: 0.5,\n        backgroundColor: uiBackgroundColor,\n        padding: commonPadding,\n        paddingLeft: isLandscape ? 0 : undefined,\n        paddingTop: isLandscape ? undefined : 0,\n      }}>\n      <View style={{ flexDirection: 'row', paddingBottom: commonPadding }}>\n        <Button variant=\"contained\" color=\"primary\">\n          hai\n        </Button>\n        <View style={{ width: 24 }} />\n        <Button variant=\"contained\" color=\"secondary\">\n          ooh\n        </Button>\n      </View>\n      <View>\n        <Slider\n          value={store.scale}\n          min={0}\n          max={10}\n          step={0.01}\n          onChange={(_, value) => {\n            store.scale = value as number;\n            notifyStore();\n          }}\n        />\n        <Typography style={{ paddingTop: commonPadding }}>\n          buttons don't do anything, slider scales rectangles\n        </Typography>\n      </View>\n    </View>\n  );\n};\n\nconst App = () => {\n  // Store change notification\n  const [storeCounter, setStoreCounter] = useState(0);\n  const notifyStore = useCallback(() => {\n    setStoreCounter((storeCounter) => storeCounter + 1);\n  }, []);\n\n  // Track landscape / portrait\n  const [flexDirection, setFlexDirection] = useState<'row' | 'column'>(\n    window.innerWidth > window.innerHeight ? 'row' : 'column'\n  );\n  useEffect(() => {\n    const listener = () => {\n      setFlexDirection(window.innerWidth > window.innerHeight ? 'row' : 'column');\n    };\n    window.addEventListener('resize', listener);\n    window.addEventListener('scroll', listener);\n    const mql = window.matchMedia('(orientation: portrait)');\n    mql.addListener(listener);\n    return () => {\n      window.removeEventListener('resize', listener);\n      window.removeEventListener('scroll', listener);\n      mql.removeListener(listener);\n    };\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <SafeAreaView style={{ flex: 1 }}>\n        <ScrollLock>\n          <div style={{ width: '100%', height: '100%' }}>\n            <View style={{ width: '100%', height: '100%', flexDirection }}>\n              <Canvas notifyStore={notifyStore} />\n              <UI\n                isLandscape={flexDirection == 'row'}\n                storeCounter={storeCounter}\n                notifyStore={notifyStore}\n              />\n            </View>\n          </div>\n        </ScrollLock>\n      </SafeAreaView>\n    </ThemeProvider>\n  );\n  return;\n};\n\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}